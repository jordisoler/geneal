/*
 * Copyright (C) 2015 jordi
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package geneal;

import Exceptions.DBException;
import Exceptions.MUException;
import db.persona;
import static geneal.config.normalFont;
import static geneal.config.smallFont;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jordi
 */
public class taula extends javax.swing.JFrame {

    private DefaultTableModel model;
    private int fitxa, index;
    private final formFitxa f;
    private ArrayList<Integer> ids;
    
    private final String fillPrefix = "Fill de ";
    /**
     * Creates new form taula
     * @param f_
     */
    public taula(formFitxa f_) {
        initComponents();
        
        f = f_;
        String[] municipis = db.municipi.getAll();
        geneal.formutils.fillCb(this.c_llocn, municipis);
        geneal.formutils.fillCb(this.c_llocd, municipis);
        
        int npersones = db.persona.count(), nunions = db.unio.count();
        this.l_total.setText("Total: "+npersones+" persones, "+nunions+" unions.");
        find();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup = new javax.swing.JPopupMenu();
        mi_carregar = new javax.swing.JMenuItem();
        mi_modificar = new javax.swing.JMenuItem();
        scrollpane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        t_nom = new javax.swing.JTextField();
        t_llin1 = new javax.swing.JTextField();
        t_llin2 = new javax.swing.JTextField();
        l_total = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        l_info = new javax.swing.JLabel();
        b_cerca = new javax.swing.JButton();
        c_llocd = new javax.swing.JComboBox();
        c_llocn = new javax.swing.JComboBox();

        mi_carregar.setText("Carregar");
        mi_carregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_carregarActionPerformed(evt);
            }
        });
        popup.add(mi_carregar);

        mi_modificar.setText("Modificar");
        mi_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_modificarActionPerformed(evt);
            }
        });
        popup.add(mi_modificar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setFont(normalFont);
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.setRowHeight(24);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        scrollpane.setViewportView(table);

        getContentPane().add(scrollpane, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 870, 510));

        jLabel1.setFont(smallFont);
        jLabel1.setText("Lloc defunci√≥");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 40, -1, -1));

        t_nom.setFont(normalFont);
        getContentPane().add(t_nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 130, -1));

        t_llin1.setFont(normalFont);
        getContentPane().add(t_llin1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 150, -1));

        t_llin2.setFont(normalFont);
        getContentPane().add(t_llin2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, 160, -1));

        l_total.setFont(normalFont);
        l_total.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        l_total.setText("jLabel1");
        getContentPane().add(l_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 620, 330, -1));

        jLabel3.setFont(smallFont);
        jLabel3.setText("Nom");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jLabel4.setFont(smallFont);
        jLabel4.setText("Primer llinatge");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, -1, -1));

        jLabel5.setFont(smallFont);
        jLabel5.setText("Segon llinatge");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, -1, -1));

        jLabel6.setFont(smallFont);
        jLabel6.setText("Lloc naixement");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 40, -1, -1));

        l_info.setFont(normalFont);
        l_info.setText("jLabel1");
        getContentPane().add(l_info, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 620, -1, -1));

        b_cerca.setFont(normalFont);
        b_cerca.setText("Cerca");
        b_cerca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cercaActionPerformed(evt);
            }
        });
        getContentPane().add(b_cerca, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 60, 70, -1));

        c_llocd.setFont(normalFont);
        c_llocd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        c_llocd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_llocdActionPerformed(evt);
            }
        });
        getContentPane().add(c_llocd, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 60, 160, -1));

        c_llocn.setFont(normalFont);
        c_llocn.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(c_llocn, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 60, 150, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_cercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cercaActionPerformed
        find();
    }//GEN-LAST:event_b_cercaActionPerformed

    private void c_llocdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_llocdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_llocdActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        if ( SwingUtilities.isRightMouseButton(evt)){
            index = table.rowAtPoint(evt.getPoint());
            String sfitxa = (String) model.getValueAt(index, 0);
            try{
                fitxa = Integer.parseInt(sfitxa);
            }catch(NumberFormatException e){
                fitxa = Integer.parseInt(sfitxa.substring(fillPrefix.length()));
            }
            popup.show(table, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tableMouseClicked

    private void mi_carregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_carregarActionPerformed
        f.fillFitxa(fitxa);
        this.dispose();
    }//GEN-LAST:event_mi_carregarActionPerformed

    private void mi_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_modificarActionPerformed
        persona p = new db.persona(ids.get(index));
        new ModifyPersonTaula(p, this, index).setVisible(true);
    }//GEN-LAST:event_mi_modificarActionPerformed

    private static String nullify(String in){
        if (in==null || in.isEmpty()){
            return null;
        }else{
            return in;
        }
    }
    private static String nullify(javax.swing.JComboBox in){
        if (in.getSelectedIndex()==0){
            return null;
        }else{
            return String.valueOf(in.getSelectedItem());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_cerca;
    private javax.swing.JComboBox c_llocd;
    private javax.swing.JComboBox c_llocn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel l_info;
    private javax.swing.JLabel l_total;
    private javax.swing.JMenuItem mi_carregar;
    private javax.swing.JMenuItem mi_modificar;
    private javax.swing.JPopupMenu popup;
    private javax.swing.JScrollPane scrollpane;
    private javax.swing.JTextField t_llin1;
    private javax.swing.JTextField t_llin2;
    private javax.swing.JTextField t_nom;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    private void Add(persona p) {
        String[] values = getData(p);
        model.addRow(values);
    }
    
    public void updateRow(persona p, int idx){
        String[] values = getData(p);
        for (int col = 0; col<values.length; col++){
            model.setValueAt(values[col], idx, col);
        }
    }

    private void find() {
        String[] columns = {"Fitxa", "Nom", "Primer Llin.", "Segon Llin.", 
            "Data Naix.", "Lloc Naix.", "Data Def.", "Lloc Def.", "Sexe"},
                dades = new String [columns.length];
        db.persona[] people;
        ids = new ArrayList<>();
        javax.swing.JTextField[] nom = {t_nom, t_llin1, t_llin2};
        
        model = new DefaultTableModel(null, columns);
        
        int idx = 0;
        for (javax.swing.JTextField t : nom){
            dades[idx] = nullify(t.getText());
            idx++;
        }
        dades[3] = nullify(c_llocn);
        dades[4] = nullify(c_llocd);
        people = db.persona.search(dades);
        for (db.persona p : people){
            Add(p);
            ids.add(p.getId());
        }
        table.setModel(model);
        table.setCellSelectionEnabled(false);
        table.setColumnSelectionAllowed(false);
        table.setEnabled(false);
        l_info.setText("S'han trobat "+table.getRowCount()+" persones.");
    }
    
    private String[] getData(persona p){
        String[] values = new String [9];
        db.unio u;
        db.naixement n;
        try {
            u = db.unio.fromConjuge(p.getId());
        } catch (MUException ex) {
            Logger.getLogger(taula.class.getName()).log(Level.SEVERE, null, ex);
            u = new db.unio();
        } catch (DBException ex) {
            u = new db.unio();
        }
        try {
            n = new db.naixement(p.getId());
        } catch (DBException ex) {
            n = new db.naixement();
        }
        if (u.getFitxa()!=-1){
            values[0] = String.valueOf(u.getFitxa());
        }else if (n.getIdUnio()!=-1){
            try {
                values[0] = fillPrefix+n.getUnio().getFitxa();
            } catch (DBException ex) {
                Logger.getLogger(taula.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        values[1] = p.getNom();
        values[2] = p.getLlinatge1();
        values[3] = p.getLlinatge2();
        try{
            values[4] = n.getDate().toString();
        }catch (NullPointerException ex){
            System.out.println("Naixement: "+n.toString());
        }
        values[5] = n.getLloc().getMunicipi();
        try{
            values[6] = p.getDataDefuncio().toString();
        }catch (NullPointerException ex){
            System.out.println("Defunci√≥: "+p);
        }
        values[7] = p.getLlocDefuncio().getMunicipi();
        values[8] = p.getSexe();
        return values;
    }
}
